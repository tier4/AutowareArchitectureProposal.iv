/**:
  ros__parameters:
    # obstacle check
    use_pointcloud: true # use pointcloud as obstacle check
    use_dynamic_object: true # use dynamic object as obstacle check
    surround_check_distance: 0.5 # if objects exist in this distance, transit to "exist-surrounding-obstacle" status [m]
    surround_check_recover_distance: 0.8 # if no object exists in this distance, transit to "non-surrounding-obstacle" status [m]
    state_clear_time: 2.0

    # ego stop state
    stop_state_ego_speed: 0.1 #[m/s]
