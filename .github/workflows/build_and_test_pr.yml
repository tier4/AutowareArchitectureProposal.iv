name: Build and test for PR

on:
  pull_request:

jobs:
  build-and-test-pr:
    runs-on: ubuntu-latest
    container: rostooling/setup-ros-docker:ubuntu-focal-ros-galactic-ros-base-latest
    outputs:
      compile-commands-hash: ${{ steps.calc_hash.outputs.hash }}

    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.9.1

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          # Fetch with depth=0 to calculate modified packages
          fetch-depth: 0

      - name: Install pip and apt-transport-https
        run: |
          apt-get -y update
          apt-get -y install python3-pip apt-transport-https

      # tmp: colcon-package-selection 0.2.6 doesn't support --packages-above-and-dependencies
      - name: Update colcon
        run: |
          pip3 install -U colcon-package-selection

      - name: Search modified packages
        id: list_packages
        run: |
          ${GITHUB_WORKSPACE}/.github/get_modified_package.sh origin/${{ github.base_ref }}

      - name: Show target packages
        run: |
          echo "Target packages: ${{ steps.list_packages.outputs.package_list }}"

      - name: Set git config for private repositories
        if: ${{ steps.list_packages.outputs.package_list != '' }}
        run: |
          git config --local --unset-all http.https://github.com/.extraheader || true
          git config --global url.https://${{ secrets.REPO_TOKEN }}@github.com.insteadOf 'https://github.com'

      - name: Add Autonomoustuff repository
        run: |
          sh -c 'echo "yaml https://s3.amazonaws.com/autonomoustuff-repo/autonomoustuff-public-galactic.yaml" > /etc/ros/rosdep/sources.list.d/40-autonomoustuff-public-galactic.list'
          sh -c 'echo "deb [trusted=yes] https://s3.amazonaws.com/autonomoustuff-repo/ focal main" > /etc/apt/sources.list.d/autonomoustuff-public.list'

      - name: Clone dependency packages
        if: ${{ steps.list_packages.outputs.package_list != '' }}
        run: |
          mkdir dependency_ws
          vcs import dependency_ws < build_depends.repos
          apt-get -y update
          rosdep update
          DEBIAN_FRONTEND=noninteractive rosdep install -y --from-paths . --ignore-src --rosdistro galactic

      - name: Build
        if: ${{ steps.list_packages.outputs.package_list != '' }}
        run: |
          . /opt/ros/galactic/setup.sh
          colcon build --event-handlers console_cohesion+ \
            --packages-above-and-dependencies ${{ steps.list_packages.outputs.package_list }} \
            --cmake-args -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: Run tests
        if: ${{ steps.list_packages.outputs.package_list != '' }}
        run: |
          . /opt/ros/galactic/setup.sh
          colcon test --event-handlers console_cohesion+ \
            --packages-above ${{ steps.list_packages.outputs.package_list }} \
            --return-code-on-test-failure

      - name: Calculate hash of compile_commands.json
        id: calc_hash
        run: echo "::set-output name=hash::${{ hashFiles('build/compile_commands.json') }}"

      - name: Cache build files for Clang-Tidy
        uses: actions/cache@v2
        with:
          path: |
            ./build
            ./install
          key: compile-commands-${{ steps.calc_hash.outputs.hash }}

  clang-tidy-pr:
    needs: build-and-test-pr
    runs-on: ubuntu-latest
    container: rostooling/setup-ros-docker:ubuntu-focal-ros-galactic-ros-base-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          # Fetch with depth=0 to calculate modified packages
          fetch-depth: 0

      - name: Install pip and Clang-Tidy
        run: |
          apt-get -y -q update
          apt-get -y -q install python3-pip apt-transport-https clang-tidy

      - name: Find modified files after merging origin/main
        id: list_files
        run: |
          # List added/modified/renamed files excluding deleted ones
          modified_files=$(git --no-pager diff --name-only --diff-filter=d origin/"${{ github.base_ref }}"...HEAD)
          target_files=$(echo "$modified_files" | egrep "\.(cpp|hpp)$") || true
          echo ::set-output name=file_list::${target_files}

      - name: Show modified files
        run: |
          echo "Target files: ${{ steps.list_files.outputs.file_list }}"

      - name: Set git config for private repositories
        if: ${{ steps.list_files.outputs.file_list != '' }}
        run: |
          git config --local --unset-all http.https://github.com/.extraheader || true
          git config --global url.https://${{ secrets.REPO_TOKEN }}@github.com.insteadOf 'https://github.com'

      - name: Add Autonomoustuff repository
        run: |
          sh -c 'echo "yaml https://s3.amazonaws.com/autonomoustuff-repo/autonomoustuff-public-galactic.yaml" > /etc/ros/rosdep/sources.list.d/40-autonomoustuff-public-galactic.list'
          sh -c 'echo "deb [trusted=yes] https://s3.amazonaws.com/autonomoustuff-repo/ focal main" > /etc/apt/sources.list.d/autonomoustuff-public.list'

      - name: Clone dependency packages
        if: ${{ steps.list_files.outputs.file_list != '' }}
        run: |
          mkdir dependency_ws
          vcs import dependency_ws < build_depends.repos
          apt-get -y -q update
          rosdep update -q
          DEBIAN_FRONTEND=noninteractive rosdep install -y -q --from-paths . --ignore-src --rosdistro galactic

      - name: Restore build files from cache
        if: ${{ steps.list_files.outputs.file_list != '' }}
        uses: actions/cache@v2
        with:
          path: |
            ./build
            ./install
          key: compile-commands-${{ needs.build-and-test-pr.outputs.compile-commands-hash }}

      - name: Retrieve .clang-tidy from AutowareArchitectureProposal.proj
        if: ${{ steps.list_files.outputs.file_list != '' }}
        run: |
          curl --silent --show-error --remote-name \
            --header "Authorization: token ${{ secrets.REPO_TOKEN }}" \
            https://raw.githubusercontent.com/tier4/AutowareArchitectureProposal.proj/main/.clang-tidy

      - name: Show information of files
        continue-on-error: true
        run: |
          ls -a
          echo "---"
          find . -name compile_commands.json

      - name: Analyze
        if: ${{ steps.list_files.outputs.file_list != '' }}
        run: |
          clang-tidy -p build/compile_commands.json \
            ${{ steps.list_files.outputs.file_list }}
